Terminals unused in grammar

    '+'
    '-'
    '*'
    '/'


State 1 conflicts: 1 shift/reduce
State 2 conflicts: 3 shift/reduce
State 4 conflicts: 3 shift/reduce
State 16 conflicts: 4 shift/reduce
State 17 conflicts: 4 shift/reduce
State 18 conflicts: 4 shift/reduce
State 19 conflicts: 4 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input line

    3 line: ε
    4     | line expr CR
    5     | line EOT

    6 expr: expr ADD expr
    7     | expr SUB expr
    8     | expr MUL expr
    9     | expr DIV expr
   10     | LITERAL_INT
   11     | L_BK expr R_BK


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    error (256)
    CR (258) 4
    L_BK (259) 11
    R_BK (260) 11
    ADD (261) 6
    SUB (262) 7
    MUL (263) 8
    DIV (264) 9
    LITERAL_INT (265) 10
    EOT (266) 5


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    input (17)
        on left: 1 2
        on right: 0 2
    line (18)
        on left: 3 4 5
        on right: 1 2 4 5
    expr (19)
        on left: 6 7 8 9 10 11
        on right: 4 6 7 8 9 11


State 0

    0 $accept: • input $end

    $default  reduce using rule 3 (line)

    input  go to state 1
    line   go to state 2


State 1

    0 $accept: input • $end
    2 input: input • line

    $end  shift, and go to state 3

    $end      [reduce using rule 3 (line)]
    $default  reduce using rule 3 (line)

    line  go to state 4


State 2

    1 input: line •
    4 line: line • expr CR
    5     | line • EOT

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6
    EOT          shift, and go to state 7

    L_BK         [reduce using rule 1 (input)]
    LITERAL_INT  [reduce using rule 1 (input)]
    EOT          [reduce using rule 1 (input)]
    $default     reduce using rule 1 (input)

    expr  go to state 8


State 3

    0 $accept: input $end •

    $default  accept


State 4

    2 input: input line •
    4 line: line • expr CR
    5     | line • EOT

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6
    EOT          shift, and go to state 7

    L_BK         [reduce using rule 2 (input)]
    LITERAL_INT  [reduce using rule 2 (input)]
    EOT          [reduce using rule 2 (input)]
    $default     reduce using rule 2 (input)

    expr  go to state 8


State 5

   11 expr: L_BK • expr R_BK

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6

    expr  go to state 9


State 6

   10 expr: LITERAL_INT •

    $default  reduce using rule 10 (expr)


State 7

    5 line: line EOT •

    $default  reduce using rule 5 (line)


State 8

    4 line: line expr • CR
    6 expr: expr • ADD expr
    7     | expr • SUB expr
    8     | expr • MUL expr
    9     | expr • DIV expr

    CR   shift, and go to state 10
    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    MUL  shift, and go to state 13
    DIV  shift, and go to state 14


State 9

    6 expr: expr • ADD expr
    7     | expr • SUB expr
    8     | expr • MUL expr
    9     | expr • DIV expr
   11     | L_BK expr • R_BK

    R_BK  shift, and go to state 15
    ADD   shift, and go to state 11
    SUB   shift, and go to state 12
    MUL   shift, and go to state 13
    DIV   shift, and go to state 14


State 10

    4 line: line expr CR •

    $default  reduce using rule 4 (line)


State 11

    6 expr: expr ADD • expr

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6

    expr  go to state 16


State 12

    7 expr: expr SUB • expr

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6

    expr  go to state 17


State 13

    8 expr: expr MUL • expr

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6

    expr  go to state 18


State 14

    9 expr: expr DIV • expr

    L_BK         shift, and go to state 5
    LITERAL_INT  shift, and go to state 6

    expr  go to state 19


State 15

   11 expr: L_BK expr R_BK •

    $default  reduce using rule 11 (expr)


State 16

    6 expr: expr • ADD expr
    6     | expr ADD expr •
    7     | expr • SUB expr
    8     | expr • MUL expr
    9     | expr • DIV expr

    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    MUL  shift, and go to state 13
    DIV  shift, and go to state 14

    ADD       [reduce using rule 6 (expr)]
    SUB       [reduce using rule 6 (expr)]
    MUL       [reduce using rule 6 (expr)]
    DIV       [reduce using rule 6 (expr)]
    $default  reduce using rule 6 (expr)


State 17

    6 expr: expr • ADD expr
    7     | expr • SUB expr
    7     | expr SUB expr •
    8     | expr • MUL expr
    9     | expr • DIV expr

    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    MUL  shift, and go to state 13
    DIV  shift, and go to state 14

    ADD       [reduce using rule 7 (expr)]
    SUB       [reduce using rule 7 (expr)]
    MUL       [reduce using rule 7 (expr)]
    DIV       [reduce using rule 7 (expr)]
    $default  reduce using rule 7 (expr)


State 18

    6 expr: expr • ADD expr
    7     | expr • SUB expr
    8     | expr • MUL expr
    8     | expr MUL expr •
    9     | expr • DIV expr

    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    MUL  shift, and go to state 13
    DIV  shift, and go to state 14

    ADD       [reduce using rule 8 (expr)]
    SUB       [reduce using rule 8 (expr)]
    MUL       [reduce using rule 8 (expr)]
    DIV       [reduce using rule 8 (expr)]
    $default  reduce using rule 8 (expr)


State 19

    6 expr: expr • ADD expr
    7     | expr • SUB expr
    8     | expr • MUL expr
    9     | expr • DIV expr
    9     | expr DIV expr •

    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    MUL  shift, and go to state 13
    DIV  shift, and go to state 14

    ADD       [reduce using rule 9 (expr)]
    SUB       [reduce using rule 9 (expr)]
    MUL       [reduce using rule 9 (expr)]
    DIV       [reduce using rule 9 (expr)]
    $default  reduce using rule 9 (expr)
