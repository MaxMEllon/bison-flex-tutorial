Starting parse
Entering state 0
Stack now 0
Reading a token
Next token is token HEAD ()
Shifting token HEAD ()
Entering state 2
Stack now 0 2
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 4
Stack now 0 2 4
Reading a token
Next token is token CR ()
Shifting token CR ()
Entering state 17
Stack now 0 2 4 17
Reducing stack by rule 20 (line 81):
   $1 = token STRING ()
   $2 = token CR ()
-> $$ = nterm String ()
Entering state 12
Stack now 0 2 12
Reducing stack by rule 17 (line 69):
   $1 = nterm String ()
-> $$ = nterm Paragrah ()
Entering state 15
Stack now 0 2 15
Reducing stack by rule 11 (line 55):
   $1 = nterm Paragrah ()
-> $$ = nterm H1 ()
Entering state 14
Stack now 0 2 14
Reducing stack by rule 9 (line 50):
   $1 = token HEAD ()
   $2 = nterm H1 ()
-> $$ = nterm Header ()
Entering state 9
Stack now 0 9
Reducing stack by rule 7 (line 45):
   $1 = nterm Header ()
-> $$ = nterm Block ()
Entering state 8
Stack now 0 8
Reducing stack by rule 4 (line 39):
   $1 = nterm Block ()
-> $$ = nterm Blocks ()
Entering state 7
Stack now 0 7
Reading a token
Next token is token HEAD ()
Shifting token HEAD ()
Entering state 2
Stack now 0 7 2
Reading a token
Next token is token HEAD ()
Shifting token HEAD ()
Entering state 13
Stack now 0 7 2 13
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 4
Stack now 0 7 2 13 4
Reading a token
Next token is token CR ()
Shifting token CR ()
Entering state 17
Stack now 0 7 2 13 4 17
Reducing stack by rule 20 (line 81):
   $1 = token STRING ()
   $2 = token CR ()
-> $$ = nterm String ()
Entering state 12
Stack now 0 7 2 13 12
Reducing stack by rule 17 (line 69):
   $1 = nterm String ()
-> $$ = nterm Paragrah ()
Entering state 22
Stack now 0 7 2 13 22
Reducing stack by rule 13 (line 60):
   $1 = nterm Paragrah ()
-> $$ = nterm H2 ()
Entering state 21
Stack now 0 7 2 13 21
Reducing stack by rule 10 (line 54):
   $1 = token HEAD ()
   $2 = nterm H2 ()
-> $$ = nterm H1 ()
Entering state 14
Stack now 0 7 2 14
Reducing stack by rule 9 (line 50):
   $1 = token HEAD ()
   $2 = nterm H1 ()
-> $$ = nterm Header ()
Entering state 9
Stack now 0 7 9
Reducing stack by rule 7 (line 45):
   $1 = nterm Header ()
-> $$ = nterm Block ()
Entering state 19
Stack now 0 7 19
Reducing stack by rule 5 (line 40):
   $1 = nterm Blocks ()
   $2 = nterm Block ()
-> $$ = nterm Blocks ()
Entering state 7
Stack now 0 7
Reading a token
Next token is token HEAD ()
Shifting token HEAD ()
Entering state 2
Stack now 0 7 2
Reading a token
Next token is token HEAD ()
Shifting token HEAD ()
Entering state 13
Stack now 0 7 2 13
Reading a token
Next token is token HEAD ()
Shifting token HEAD ()
Entering state 20
Stack now 0 7 2 13 20
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 4
Stack now 0 7 2 13 20 4
Reading a token
Next token is token CR ()
Shifting token CR ()
Entering state 17
Stack now 0 7 2 13 20 4 17
Reducing stack by rule 20 (line 81):
   $1 = token STRING ()
   $2 = token CR ()
-> $$ = nterm String ()
Entering state 12
Stack now 0 7 2 13 20 12
Reducing stack by rule 17 (line 69):
   $1 = nterm String ()
-> $$ = nterm Paragrah ()
Entering state 25
Stack now 0 7 2 13 20 25
Reducing stack by rule 15 (line 64):
   $1 = nterm Paragrah ()
-> $$ = nterm H3 ()
Entering state 24
Stack now 0 7 2 13 20 24
Reducing stack by rule 12 (line 59):
   $1 = token HEAD ()
   $2 = nterm H3 ()
-> $$ = nterm H2 ()
Entering state 21
Stack now 0 7 2 13 21
Reducing stack by rule 10 (line 54):
   $1 = token HEAD ()
   $2 = nterm H2 ()
-> $$ = nterm H1 ()
Entering state 14
Stack now 0 7 2 14
Reducing stack by rule 9 (line 50):
   $1 = token HEAD ()
   $2 = nterm H1 ()
-> $$ = nterm Header ()
Entering state 9
Stack now 0 7 9
Reducing stack by rule 7 (line 45):
   $1 = nterm Header ()
-> $$ = nterm Block ()
Entering state 19
Stack now 0 7 19
Reducing stack by rule 5 (line 40):
   $1 = nterm Blocks ()
   $2 = nterm Block ()
-> $$ = nterm Blocks ()
Entering state 7
Stack now 0 7
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 4
Stack now 0 7 4
Reading a token
Next token is token CR ()
Shifting token CR ()
Entering state 17
Stack now 0 7 4 17
Reducing stack by rule 20 (line 81):
   $1 = token STRING ()
   $2 = token CR ()
-> $$ = nterm String ()
Entering state 12
Stack now 0 7 12
Reducing stack by rule 17 (line 69):
   $1 = nterm String ()
-> $$ = nterm Paragrah ()
Entering state 10
Stack now 0 7 10
Reducing stack by rule 8 (line 46):
   $1 = nterm Paragrah ()
-> $$ = nterm Block ()
Entering state 19
Stack now 0 7 19
Reducing stack by rule 5 (line 40):
   $1 = nterm Blocks ()
   $2 = nterm Block ()
-> $$ = nterm Blocks ()
Entering state 7
Stack now 0 7
Reading a token
Next token is token L_SB ()
Shifting token L_SB ()
Entering state 3
Stack now 0 7 3
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 16
Stack now 0 7 3 16
Reading a token
Next token is token R_SB ()
Shifting token R_SB ()
Entering state 23
Stack now 0 7 3 16 23
Reading a token
Next token is token L_PT ()
Shifting token L_PT ()
Entering state 26
Stack now 0 7 3 16 23 26
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 27
Stack now 0 7 3 16 23 26 27
Reading a token
Next token is token R_PT ()
Shifting token R_PT ()
Entering state 28
Stack now 0 7 3 16 23 26 27 28
Reducing stack by rule 18 (line 73):
   $1 = token L_SB ()
   $2 = token STRING ()
   $3 = token R_SB ()
   $4 = token L_PT ()
   $5 = token STRING ()
   $6 = token R_PT ()
-> $$ = nterm URL ()
Entering state 11
Stack now 0 7 11
Reducing stack by rule 16 (line 68):
   $1 = nterm URL ()
-> $$ = nterm Paragrah ()
Entering state 10
Stack now 0 7 10
Reducing stack by rule 8 (line 46):
   $1 = nterm Paragrah ()
-> $$ = nterm Block ()
Entering state 19
Stack now 0 7 19
Reducing stack by rule 5 (line 40):
   $1 = nterm Blocks ()
   $2 = nterm Block ()
-> $$ = nterm Blocks ()
Entering state 7
Stack now 0 7
Reading a token
Next token is token CR ()
Shifting token CR ()
Entering state 1
Stack now 0 7 1
Reducing stack by rule 19 (line 80):
   $1 = token CR ()
-> $$ = nterm String ()
Entering state 12
Stack now 0 7 12
Reducing stack by rule 17 (line 69):
   $1 = nterm String ()
-> $$ = nterm Paragrah ()
Entering state 10
Stack now 0 7 10
Reducing stack by rule 8 (line 46):
   $1 = nterm Paragrah ()
-> $$ = nterm Block ()
Entering state 19
Stack now 0 7 19
Reducing stack by rule 5 (line 40):
   $1 = nterm Blocks ()
   $2 = nterm Block ()
-> $$ = nterm Blocks ()
Entering state 7
Stack now 0 7
Reading a token
Now at end of input.
Reducing stack by rule 2 (line 34):
   $1 = nterm Blocks ()
-> $$ = nterm Document ()
Entering state 6
Stack now 0 6
Now at end of input.
Shifting token "end of file" ()
Entering state 18
Stack now 0 6 18
Stack now 0 6 18
Cleanup: popping token "end of file" ()
Cleanup: popping nterm Document ()
